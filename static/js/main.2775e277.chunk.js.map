{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","isURLField","Boolean","isValidURL","test","hasErrorURL","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","DEFAULT_INPUT_VAL","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isSubmitBtnDisabled","onSubmit","e","preventDefault","newMovie","prevVal","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2775e277.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  // eslint-disable-next-line\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const isURLField: boolean = (name === 'imgUrl' || name === 'imdbUrl')\n    && Boolean(value);\n  const isValidURL: boolean = pattern.test(value);\n  const hasErrorURL = isURLField && !isValidURL;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasErrorURL && (\n        <p className=\"help is-danger\">Invalid URL</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const DEFAULT_INPUT_VAL = '';\n\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState(DEFAULT_INPUT_VAL);\n  const [description, setDescription] = useState(DEFAULT_INPUT_VAL);\n  const [imgUrl, setImgUrl] = useState(DEFAULT_INPUT_VAL);\n  const [imdbUrl, setImdbUrl] = useState(DEFAULT_INPUT_VAL);\n  const [imdbId, setImdbId] = useState(DEFAULT_INPUT_VAL);\n\n  const isSubmitBtnDisabled = title === DEFAULT_INPUT_VAL\n    || imdbUrl === DEFAULT_INPUT_VAL\n    || imgUrl === DEFAULT_INPUT_VAL\n    || imdbUrl === DEFAULT_INPUT_VAL\n    || imdbId === DEFAULT_INPUT_VAL;\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    setTitle(DEFAULT_INPUT_VAL);\n    setDescription(DEFAULT_INPUT_VAL);\n    setImgUrl(DEFAULT_INPUT_VAL);\n    setImdbUrl(DEFAULT_INPUT_VAL);\n    setImdbId(DEFAULT_INPUT_VAL);\n\n    onAdd(newMovie);\n    setCount(prevVal => prevVal + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isSubmitBtnDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovieHandler = (newMovie: Movie) => {\n    setMovies((prevMovies: Movie[]) => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovieHandler} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}